# Docker-compose up --build
version: '3'

services:
  blackbox:
    image: prom/blackbox-exporter:v0.23.0
    container_name: Bensonblackbox
    restart: unless-stopped
    ports:
      - 9115:9115
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./blackbox.yml:etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    networks:
      etel:
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: Bensonprometheus
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
     - blackbox
    networks:
      etel:
  db:
    container_name: bensons_postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: bbird
      POSTGRES_DB: bensonsdb
      POSTGRES_PASSWORD: P@ssw0rd!
    volumes:
     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      etel:
    #health check for db too
  website:
    container_name: bensons_website
    image: website
    restart: always
    ports:
     - 8070:8081
    depends_on: 
     - db
    build: ..
    environment:
     connectionStrings: "user id=bbird;database=bensonsdb;password=P@assw0rd!;" #host?
    healthcheck:
      test: wget --tries=1 http://localhost:8081/healthcheck || exit 1
      interval: 2s #60s
      retries: 5
      start_period: 5s #20s
      timeout: 1s #10s
    networks:
      etel:
  grafana:
    image: grafana/grafana:9.4.7
    container_name: Bensongrafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      #- GF_AUTH_ANONYMOUS_ENABLED=true
      #- GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      #- GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana-data:/var/lib/grafana
      - ./grafana/provisionin:/etc/grafana/provisioning
    restart: unless-stopped
    user: root
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      etel:

networks:
    etel:

volumes:
  prometheus:
  grafana-data:

# docker compose -f docker-compose.yml up -d

     