# Docker-compose up --build
version: '3'

services:
  blackbox:
    image: prom/blackbox-exporter:v0.23.0
    container_name: benson_blackbox
    restart: unless-stopped
    ports:
      - 9999:9115
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    networks:
      otel:

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: bensons_prometheus
    hostname: prometheus
    ports:
      - 5666:9090
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
     - blackbox
    networks:
      otel:

  tempo:
    image: grafana/tempo:2.0.1
    container_name: bensons_tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./tempo.yml:/etc/tempo.yaml
      - tempo:/tmp/tempo
    restart: unless-stopped
    ports:
      - 3233:3200  # tempo
      - 4007:4317  # otlp grpc
    depends_on:
      - otel-collector
    networks:
      otel:

  db:
    container_name: bensons_postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: bbird
      POSTGRES_DB: bensonsdb
      POSTGRES_PASSWORD: P@ssw0rd!
    volumes:
     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      otel:
    
  website:
    container_name: bensons_website
    image: website
    restart: always
    ports:
     - 8372:8081
    depends_on: 
     - db
    build: ..
    environment:
     connectionStrings: "user id=bbird;database=bensonsdb;password=P@assw0rd!;" #host?
    healthcheck:
      test: wget --tries=1 http://localhost:8081/healthcheck || exit 1
      interval: 2s #60s
      retries: 5
      start_period: 5s #20s
      timeout: 1s #10s
    networks:
      otel:

  grafana:
    image: grafana/grafana:9.4.7
    container_name: bensons_grafana
    environment:
      - GF_SECURITY_ADMIN_USER=Benson
      - GF_SECURITY_ADMIN_PASSWORD=B0bby

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana-data:/var/lib/grafana
      - ./grafana/provisionin:/etc/grafana/provisioning
    restart: unless-stopped
    user: root
    ports:
      - 3024:3000
    depends_on:
      - prometheus
    networks:
      otel:

  loki:
    image: grafana/loki:2.8.0
    container_name: bensons_loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
        - /etc/localtime:/etc/localtime:ro      
        - ./loki.yml:/etc/loki/local-config.yaml
        - loki:/data/loki
    restart: unless-stopped
    ports:
        - 3111:3100
    networks:
        otel:

  otel-collector:
    container_name: bensons_otel
    hostname: otel
    image: otel/opentelemetry-collector-contrib:0.75.0
    command: -config.file=/etc/otel-collector-config.yaml
    volumes:
      - ./otel.yml:/etc/otel-collector-config.yaml
    restart: unless-stopped
    ports:
      - 8560:8888   # Prometheus metrics exposed by the collector
      - 8127:8889   # Prometheus exporter metrics
      - 4441:4317   # OTLP gRPC receiver
      - 9222:55679  # zpages
      - 13111:13133 # Health check
    networks:
      otel:

  rabbitmq:
    image: rabbitmq:3.11.0-management-alpine
    container_name: bensons_rabbitmq
    restart: unless-stopped
    ports:
      - 5688:5672
      - 15872:15672
    networks:
      otel:


networks:
    otel:

volumes:
  loki:
  prometheus:
  tempo:
  grafana-data:

# docker compose -f docker-compose.yml up -d

     