name: Benson's deployment to alex server 2
on:
  push:
    branches:
    - ClassServerRunninerForBenson
jobs:
  unit-test:
    runs-on: [ Benson ]
    steps:
      - uses: actions/checkout@master
      - name: Unit Test
        run: docker run -t --rm -e DOTNET_CLI_HOME="/tmp/dotnet" -v $(pwd):/appUT -w /appUT --user $(id -u):$(id -g) mcr.microsoft.com/dotnet/sdk:8.0 dotnet test UnitTests/UnitTests.csproj

  Linting: 
    runs-on: [ Benson ]
    steps: 
      - uses: actions/checkout@master
      - name: linting test
        run: docker run -t --rm -v $(pwd):/appL -w /appL -e DOTNET_CLI_HOME="/tmp/dotnet" --user $(id -u):$(id -g) mcr.microsoft.com/dotnet/sdk:8.0 dotnet format --verify-no-changes

  BuildWarnings: 
    runs-on: [ Benson ]
    steps: 
      - uses: actions/checkout@master
      - name: warning tests, fails if any
        run: docker run -t --rm -v $(pwd):/appBW -w /appBW -e DOTNET_CLI_HOME="/tmp/dotnet" --user $(id -u):$(id -g) mcr.microsoft.com/dotnet/sdk:8.0 dotnet build -warnaserror

  integration-test:
    runs-on: [ Benson ]
    steps:
      - uses: actions/checkout@master
      - name: Integration tests
        run: |
            #dotnet workload install maui --user $(id -u):$(id -g)
            #dotnet workload restore --user $(id -u):$(id -g)cd    
            docker run -t --rm -v $(pwd):/appit -w -e dotnet_cli_home="/tmp/dotnet" --user $(id -u):$(id -g) /appit mcr.microsoft.com/dotnet/sdk:8.0
            dotnet test teststru/teststru.csproj

  run-on-github-actions:
    runs-on: [ Benson ]
    steps:
      - uses: actions/checkout@master
      # - name: "get rid of current composition"
      #   run: |
      #       cd ./ticketsrus-benson-dallin-dorian/Staging
      #       docker compose down -v
      #       cd ../../
      #       rm -rf ./ticketsrus-benson-dallin-dorian
      #   working-directory: ./../../../../

      - name: "clone the github"
        run: |
            git clone --single-branch --branch ClassServerRunninerForBenson https://${{secrets.BENSONS_PAT}}@github.com/SnowSE/ticketsrus-benson-dallin-dorian.git
        working-directory: ./../../../../

      - name: "Turn on the docker containers"
        run: |
            cd ./ticketsrus-benson-dallin-dorian/Staging
            docker compose up --build -d
        working-directory: ./../../../../

      - name: Microsoft Teams Failure Notification
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.BENSONS_HOOKER }}
          raw: >-
            {
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "correlationId": "0b72cc8a2cea509ba06b41892066784d7f602834",
              "themeColor": "#345",
              "title": "Bensons app did not work, what else is new",
              "summary": "[SnowSE/ticketsrus-benson-dallin-dorian](https://github.com/SnowSE/ticketsrus-benson-dallin-dorian)",
              "sections": [
                {
                  "activityTitle": "",
                  "activitySubtitle": "The deployment failed",
                  "activityImage": "https://cdn4.iconfinder.com/data/icons/web-design-and-development-88/64/web_application_error_crash_error-512.png"
                }
              ],
              "potentialAction": [
                {
                  "@type": "OpenUri",
                  "name": "Repository",
                  "targets": [
                    {
                      "os": "default",
                      "uri": "https://github.com/SnowSE/ticketsrus-benson-dallin-dorian"
                    }
                  ]
                },
                {
                  "@type": "OpenUri",
                  "name": "Compare",
                  "targets": [
                    {
                      "os": "default",
                      "uri": "https://github.com/SnowSE/ticketsrus-benson-dallin-dorian/"
                    }
                  ]
                }
              ],
              "text": ""
            }

      - name: Microsoft Teams Success Notification
        uses: skitionek/notify-microsoft-teams@master
        if: success()
        with:
          webhook_url: ${{ secrets.BENSONS_HOOKER }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}